<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hedian.mapper.ResMoAbnormalInfoMapper">
    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.hedian.entity.ResMoAbnormalInfo">
        <id column="res_abnormal_id" property="resAbnormalId"/>
        <result column="res_id" property="resId"/>
        <result column="mo_th_id" property="moThId"/>
        <result column="mo_kpi_id" property="moKpiId"/>
        <result column="mo_abnormal_id" property="moAbnormalId"/>
        <result column="res_abnormal_code" property="resAbnormalCode"/>
        <result column="res_abnormal_name" property="resAbnormalName"/>
        <result column="res_abnormallevel_id" property="resAbnormallevelId"/>
        <result column="abnormal_type_id" property="abnormalTypeId"/>
        <result column="res_abnormaldesc" property="resAbnormaldesc"/>
        <result column="res_abnomaltime" property="resAbnomaltime"/>
        <result column="res_recoverytime" property="resRecoverytime"/>
        <result column="res_abnormalvalue" property="resAbnormalvalue"/>
        <result column="res_revoveryvalue" property="resRevoveryvalue"/>
        <result column="confirm_status" property="confirmStatus"/>
        <result column="res_abnormalstatus" property="resAbnormalstatus"/>
        <result column="confirm_type" property="confirmType"/>
        <result column="confirm_user_id" property="confirmUserId"/>
        <result column="confirm_time" property="confirmTime"/>
        <result column="confirm_info" property="confirmInfo"/>
        <result column="clean_type" property="cleanType"/>
        <result column="clean_user_id" property="cleanUserId"/>
        <result column="clean_time" property="cleanTime"/>
        <result column="clean_info" property="cleanInfo"/>
        <result column="dispatch_type" property="dispatchType"/>
        <result column="dispatch_user_id" property="dispatchUserId"/>
        <result column="dispatch_time" property="dispatchTime"/>
        <result column="dispatch_ticket_id" property="dispatchTicketId"/>
        <result column="fms_id" property="fmsId"/>
        <result column="useflag" property="useflag"/>
        <result column="del_user_id" property="delUserId"/>
        <result column="deltime" property="deltime"/>
    </resultMap>


    <!-- 自定义map -->
    <resultMap id="CustomMap" type="com.hedian.model.ResMoAbnormalInfoModel">
        <id column="res_abnormal_id" property="resAbnormalId"/>
        <result column="res_id" property="resId"/>
        <result column="mo_th_id" property="moThId"/>
        <result column="mo_kpi_id" property="moKpiId"/>
        <result column="mo_abnormal_id" property="moAbnormalId"/>
        <result column="res_abnormal_code" property="resAbnormalCode"/>
        <result column="res_abnormal_name" property="resAbnormalName"/>
        <result column="res_abnormallevel_id" property="resAbnormallevelId"/>
        <result column="abnormal_type_id" property="abnormalTypeId"/>
        <result column="res_abnormaldesc" property="resAbnormaldesc"/>
        <result column="res_abnomaltime" property="resAbnomaltime"/>
        <result column="res_recoverytime" property="resRecoverytime"/>
        <result column="res_abnormalvalue" property="resAbnormalvalue"/>
        <result column="res_revoveryvalue" property="resRevoveryvalue"/>
        <result column="confirm_status" property="confirmStatus"/>
        <result column="res_abnormalstatus" property="resAbnormalstatus"/>
        <result column="confirm_type" property="confirmType"/>
        <result column="confirm_user_id" property="confirmUserId"/>
        <result column="confirm_time" property="confirmTime"/>
        <result column="confirm_info" property="confirmInfo"/>
        <result column="clean_type" property="cleanType"/>
        <result column="clean_user_id" property="cleanUserId"/>
        <result column="clean_time" property="cleanTime"/>
        <result column="clean_info" property="cleanInfo"/>
        <result column="dispatch_type" property="dispatchType"/>
        <result column="dispatch_user_id" property="dispatchUserId"/>
        <result column="dispatch_time" property="dispatchTime"/>
        <result column="dispatch_ticket_id" property="dispatchTicketId"/>
        <result column="fms_id" property="fmsId"/>
        <result column="useflag" property="useflag"/>
        <result column="del_user_id" property="delUserId"/>
        <result column="deltime" property="deltime"/>
        <result column="abnormal_type_name" property="abnormalTypeName"/>
        <result column="res_name" property="resName"/>
        <result column="res_alias" property="resAlias"/>
        <result column="res_abnormallevel_name" property="resAbnormallevelName"/>
        <result column="res_abnormallevel_color" property="resAbnormallevelColor"/>
        <result column="mo_kpi_name" property="mokpiName"/>
        <result column="confirmUserName" property="confirmUserName"/>
        <result column="dispatchUserName" property="dispatchUserName"/>
        <result column="cleanUserName" property="cleanUserName"/>
        <result column="mo_kpi_name" property="mokpiName"/>
    </resultMap>

    <resultMap id="AlarmResultMap" type="com.hedian.model.AlarmInfoModel">
        <id column="res_id" property="resId"/>
        <result column="res_alias" property="alarmObjectAlias"/>
        <result column="res_abnormallevel_name" property="alarmLevel"/>
        <result column="res_abnormallevel_color" property="alarmColor"/>
        <result column="res_abnormal_code" property="alarmCode"/>
        <result column="res_name" property="alarmObjectType"/>
        <result column="res_abnormal_name" property="alarmName"/>
        <result column="mo_abnormal_name" property="alarmObject"/>
        <result column="res_abnormaldesc" property="alarmDesc"/>
        <result column="res_abnomaltime" property="alarmTime"/>
        <result column="clean_type" property="cleanType"/>
        <result column="confirm_status" property="confirmStatus"/>
        <result column="dispatch_type" property="dispatchType"/>
    </resultMap>


    <resultMap id="TopAbnormalMap" type="com.hedian.entity.MoAbnormalDef">
        <id column="mo_abnormal_id" property="moAbnormalId"/>
        <result column="mo_abnormalcode" property="moAbnormalcode"/>
        <result column="mo_abnormal_name" property="moAbnormalName"/>
        <result column="res_abnormallevel_id" property="resAbnormallevelId"/>
        <result column="countNum" property="countNum"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        res_abnormal_id AS resAbnormalId, res_id AS resId, mo_th_id AS moThId, mo_kpi_id AS moKpiId, mo_abnormal_id AS moAbnormalId, res_abnormal_code AS resAbnormalCode, res_abnormal_name AS resAbnormalName, res_abnormallevel_id AS resAbnormallevelId, abnormal_type_id AS abnormalTypeId, res_abnormaldesc AS resAbnormaldesc, res_abnomaltime AS resAbnomaltime, res_recoverytime AS resRecoverytime, res_abnormalvalue AS resAbnormalvalue, res_revoveryvalue AS resRevoveryvalue, confirm_status AS confirmStatus, res_abnormalstatus AS resAbnormalstatus, confirm_type AS confirmType, confirm_user_id AS confirmUserId, confirm_time AS confirmTime, confirm_info AS confirmInfo, clean_type AS cleanType, clean_user_id AS cleanUserId, clean_time AS cleanTime, clean_info AS cleanInfo, dispatch_type AS dispatchType, dispatch_user_id AS dispatchUserId, dispatch_time AS dispatchTime, dispatch_ticket_id AS dispatchTicketId, fms_id AS fmsId, useflag, del_user_id AS delUserId, deltime
    </sql>


    <select id="selectByResIdAndkpiId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tbl_res_mo_abnormal_info
        where res_abnormalstatus=1
        <if test="resId != null and resId != ''">
            and res_id = #{resId}
        </if>
        <if test="moKpiId != null and moKpiId != ''">
            and mo_kpi_id =#{moKpiId}
        </if>
    </select>

    <select id="selectAlarmByResId" resultMap="AlarmResultMap">
        select (@:=@+1) AS
        res_id,b.res_alias,d.res_abnormallevel_name,d.res_abnormallevel_color,a.res_abnormal_code,b.res_name,a.res_abnormal_name,e.mo_abnormal_name,
        a.res_abnormaldesc,a.res_abnomaltime,a.clean_type,a.confirm_status,a.dispatch_type
        from
        (select * from tbl_res_mo_abnormal_info where
        1=1
        <if test="resId != null and resId != ''">
            and res_id=#{resId,jdbcType=BIGINT}
        </if>
        and res_abnormalstatus=1 ) a
        left join tbl_res_base b on a.res_id=b.res_id
        left join tbl_res_abnormallevel d on a.res_abnormallevel_id=d.res_abnormallevel_id
        left join tbl_mo_abnormal_def e on a.mo_abnormal_id=e.mo_abnormal_id
        join (SELECT @:=0) r
        order by a.res_abnomaltime desc
    </select>

    <select id="getTopAbnormal" resultMap="TopAbnormalMap">
        select b.mo_abnormal_id,b.mo_abnormalcode,b.mo_abnormal_name,b.res_abnormallevel_id,count(b.mo_abnormal_id) as
        countNum
        from
        (select * from tbl_res_mo_abnormal_info where 1=1
        <if test="resIds != null">and res_id IN
            <foreach item="rId" collection="resIds" open="(" separator=","
                     close=")">
                #{rId}
            </foreach>
        </if>
        ) a LEFT JOIN tbl_mo_abnormal_def b ON a.mo_abnormal_id=b.mo_abnormal_id
        GROUP BY b.mo_abnormal_id ORDER BY countNum DESC
    </select>
    <!--分页条件查询-->
    <select id="selectPageByCondition" resultMap="CustomMap">
        SELECT tat.abnormal_type_name,rb.res_name, rb.res_alias, ra.res_abnormallevel_name, ra.res_abnormallevel_color,
        mk.mo_kpi_name, suc.name AS confirmUserName,sud.name AS dispatchUserName,
        rmi.* FROM
        tbl_res_mo_abnormal_info rmi
        INNER JOIN tbl_abnormal_type tat ON rmi.abnormal_type_id = tat.abnormal_type_id
        INNER JOIN tbl_res_base rb ON rmi.res_id = rb.res_id
        INNER JOIN tbl_res_abnormallevel ra ON rmi.res_abnormallevel_id = ra.res_abnormallevel_id
        LEFT JOIN tbl_mo_kpi mk ON rmi.mo_kpi_id = mk.mo_kpi_id
        LEFT JOIN sys_user suc ON rmi.confirm_user_id = suc.user_id
        LEFT JOIN sys_user sud ON rmi.dispatch_user_id = sud.user_id
        WHERE rmi.useflag = 1
        <if test="beginTime != null and beginTime != ''">
            AND rmi.res_abnomaltime <![CDATA[ >= ]]> #{beginTime}
        </if>
        <if test="resAbnormalId != null and resAbnormalId != ''">
            AND rmi.res_abnormal_id = #{resAbnormalId}
        </if>
        <if test="endTime != null and endTime != ''">
            AND rmi.res_abnomaltime <![CDATA[ <= ]]> #{endTime}
        </if>
        <if test="isAutoOrder">
            AND rmi.dispatch_type != 0
        </if>
        <if test="useflag != null and useflag != ''">
            AND rmi.useflag=#{useflag}
        </if>
        <if test="abnormalLevel != null and abnormalLevel != ''">
            AND ra.res_abnormallevel_name LIKE concat('%',#{abnormalLevel},'%')
        </if>
        <if test="abnormalType != null and abnormalType != ''">
            AND tat.abnormal_type_name LIKE concat('%', #{abnormalType},'%')
        </if>
        <if test="abnormalName != null and abnormalName != ''">
            AND rmi.res_abnormal_name LIKE concat('%',#{abnormalName},'%')
        </if>
        <if test="mokpiName != null and mokpiName != ''">
            AND mk.mo_kpi_name LIKE concat('%',#{mokpiName},'%')
        </if>
        <if test="resName != null and resName != ''">
            AND rb.res_name LIKE concat('%',#{resName},'%')
        </if>
        <if test="resAlias != null and resAlias != ''">
            and rb.res_alias LIKE concat('%', #{resAlias},'%')
        </if>
        ORDER BY rmi.res_abnomaltime
    </select>
    <!--统计告警级别数量-->
    <select id="selectAbnormalLevelCount" resultType="com.hedian.model.AbnormalLevelModel">
        SELECT COUNT(rmi.res_abnormallevel_id) AS abnormalLevelCount, ra.res_abnormallevel_color  AS abnormalLevelColor
        FROM tbl_res_mo_abnormal_info rmi
        INNER JOIN tbl_res_abnormallevel ra ON rmi.res_abnormallevel_id = ra.res_abnormallevel_id
        WHERE rmi.useflag = 1
        GROUP BY rmi.res_abnormallevel_id
    </select>


</mapper>
